{"version":3,"sources":["Product.js","ProductList.js","App.js","reportWebVitals.js","index.js"],"names":["Product","this","props","title","weight","size","width","length","height","className","Component","ProductList","state","products","loadProducts","fetch","then","res","ok","json","status","errorMessage","message","setState","objects","category","filteredProducts","filter","product","productItems","map","averageCubicWeight","reduce","acc","toFixed","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGqBA,G,6KACP,IAAD,EAC2BC,KAAKC,MAA7BC,EADH,EACGA,MAAOC,EADV,EACUA,OAAQC,EADlB,EACkBA,KACfC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,OAAQC,EAAWH,EAAXG,OAEvB,OACI,qBAAIC,UAAU,UAAd,UACKN,EADL,MACeC,EADf,OAC2BE,EAD3B,QACuCC,EADvC,QACoDC,EADpD,Y,GANyBE,cCGhBC,G,wDACjB,WAAYT,GAAQ,IAAD,8BACrB,cAAMA,IACDU,MAAQ,CACHC,SAAS,IAHE,E,gEAQfZ,KAAKa,iB,qCAGO,IAAD,OACXC,MAfO,4EAgBZC,MAAK,SAAAC,GACL,GAAIA,EAAIC,GAUP,OAAOD,EAAIE,OATX,GAAGF,EAAIG,QAAU,KAAOH,EAAIG,OAAS,IAGpC,KADmB,CAAEC,aADRJ,EAAIE,OACuBG,SAIxC,KADmB,CAACD,aAAc,wDAO9BL,MAAK,SAAAC,GAAG,OAAI,EAAKM,SAAS,CAACV,SAAUI,EAAIO,e,+BAGpC,IACEX,EAAaZ,KAAKW,MAAlBC,SACAY,EAAaxB,KAAKC,MAAlBuB,SACFC,EAAmBb,EAASc,QAAO,SAAAC,GAAO,OAAIA,EAAQH,WAAaA,KACnEI,EAAeH,EAAiBI,KAAI,SAAAF,GAC/C,OACC,cAAC,EAAD,eAAiCA,GAAnBA,EAAQzB,UAId4B,EAAqB,EAWzB,OAJ+B,IAA5BL,EAAiBnB,SAChBwB,EAAqBL,EAAiBM,QAN1B,SAACC,EAAKL,GAAa,IAAD,EACIA,EAAQvB,KAC1C,OAAO4B,EAFuB,EACtB3B,MADsB,EACfC,OADe,EACPC,OACT,SAA0B,GAAI,GA9C9B,MAkDwC,GAAG0B,QAAQ,IAIjE,gCACI,6CAAe,+BAAOT,OACtB,mBAAGhB,UAAU,WAAb,8DACA,oBAAIA,UAAU,OAAd,SACKoB,IAEL,wDAA2BE,EAA3B,e,GA3DyBrB,cCK1ByB,MARf,WACE,OACE,qBAAK1B,UAAU,MAAf,SACE,cAAC,EAAD,CAAagB,SAAS,wBCMbW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.565e31ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Product.css';\r\n\r\nexport default class Product extends Component {\r\n    render() {\r\n        const { title, weight, size } = this.props;\r\n        const { width, length, height } = size;\r\n\r\n        return (\r\n            <li className='product'>\r\n                {title} - {weight}g - {width}cm * {length}cm * {height}cm\r\n            </li>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Product from './Product';\r\nimport './ProductList.css';\r\n\r\nconst APIURL = 'http://wp8m3he1wt.s3-website-ap-southeast-2.amazonaws.com/api/products/1';\r\nconst CONVERSION_FACTOR = 250;\r\nexport default class ProductList extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n            products:[]\r\n\t\t}\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadProducts();\r\n\t}\r\n\r\n    loadProducts() {\r\n        fetch(APIURL)\r\n\t\t.then(res => {\r\n\t\t\tif(!res.ok) {\r\n\t\t\t\tif(res.status >= 400 || res.status < 500) {\r\n\t\t\t\t\tconst data = res.json();\r\n\t\t\t\t\tlet errorMessage = { errorMessage: data.message };\r\n\t\t\t\t\tthrow errorMessage;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet errorMessage = {errorMessage: 'Please try again later, server is not responding.'}\r\n\t\t\t\t\tthrow errorMessage\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn res.json()\r\n\t\t\t}\r\n        })\r\n        .then(res => this.setState({products: res.objects}))\r\n\t}\r\n\r\n    render() {\r\n        const { products } = this.state;\r\n        const { category } = this.props;\r\n        const filteredProducts = products.filter(product => product.category === category);\r\n        const productItems = filteredProducts.map(product => {\r\n\t\t\treturn (\r\n\t\t\t\t<Product key={product.title} {...product}/>\r\n\t\t\t)\r\n        }) \r\n\r\n        var averageCubicWeight = 0;\r\n\r\n        const reducer = (acc, product) => {\r\n            const { width, length, height } = product.size\r\n            return acc + (width * length * height / 10**6 * CONVERSION_FACTOR)\r\n        }\r\n\r\n        if(filteredProducts.length !== 0) {\r\n            averageCubicWeight = filteredProducts.reduce(reducer, 0).toFixed(2)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Category - <span>{category}</span></h1>\r\n                <p className='subtitle'>Average cubic weight calculator built with React</p>\r\n                <ul className='list'>\r\n                    {productItems}\r\n                </ul>\r\n                <h2>Average Cubic Weight: {averageCubicWeight}kg</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport ProductList from './ProductList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProductList category=\"Air Conditioners\"/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}